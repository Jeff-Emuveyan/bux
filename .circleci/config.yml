version: 2.1

orbs:
  android: circleci/android@1.0.3
  gcp-cli: circleci/gcp-cli@2.2.0

# For my detailed documentation on CircleCi, see learningspace project
jobs:

  unit-test:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew # OPTIONAL: Need this command else we may get 'Gradlew: Permission denied' when trying to install Fastlane
      - android/run-tests:
          test-command: ./gradlew testDebug
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  deploy-release-build: # Use fastlane to create a release build and push to Play store internal test track:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew # OPTIONAL: Need this command else we may get 'Gradlew: Permission denied' when trying to install Fastlane
      - run:
          name: Install Fastlane
          command: bundle install
      - run:
          name: Deploy a release build to Playstore production track
          command: bundle exec fastlane go_live github_access_token:$GITHUB_PERSONAL_ACCESS_TOKEN
          # This command above will reference our Fast-file and call the lane we specified - go_live.
          # Note that we are using circleci environment variable to provide the github_access_token param
          # for go_live. This is because if Github detects that we are hardcoding a github personal access
          # token to our code base, it will automatically delete the token. Therefore we use an environment
          # variable on circleci to save the token for us.


workflows:
  bux-android-ci-cd-process:
    jobs:
      # - unit-test
      - deploy-release-build:
          # requires:
          # - unit-test
         filters:
           branches:
             only: master