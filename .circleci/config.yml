version: 2.1

orbs:
  android: circleci/android@1.0.3
  gcp-cli: circleci/gcp-cli@2.2.0

# For my detailed documentation on CircleCi, see learningspace project
jobs:

  unit-test:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew # OPTIONAL: Need this command else we may get 'Gradlew: Permission denied' when trying to install Fastlane
      - android/run-tests:
          test-command: ./gradlew testDebug
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  deploy-release-build: # Use fastlane to create a release build and push to Play store internal test track:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew # OPTIONAL: Need this command else we may get 'Gradlew: Permission denied' when trying to install Fastlane
      - run:
          name: Install Fastlane
          command: bundle install
      - run:
          name: Deploy a release build to Playstore production track
          command: bundle exec fastlane go_live github_access_token:$MY_GITHUB_PERSONAL_ACCESS_TOKEN
          # This command above will reference our Fast-file and call the lane we specified - go_live.
          # Note that we are using circleci environment variable to provide the github_access_token param
          # for go_live. This is because if Github detects that we are hardcoding a github personal access
          # token to our code base, it will automatically delete the token. Therefore we use an environment
          # variable on circleci to save the token for us.

          # PROBLEM: Using environment variable or even Context environment variables has never worked for us
          # because once we try to pass the environment variable from circleci to fastlane, the actual value of the
          # environment variable will be masked as ********. I feel this means that environment variables can only
          # be used within a circleci file. It can't be shared outside circleci. So it will never work for us once we
          # try to pass it to fastlane. I don't know how to resolve this.

          # My suggestion is to see if there is a way circleci can create the pull request for us instead of
          # using fastlane to do it, because that was what we needed the environment variable for in the first place:
          # to create PR's using fastlane.


workflows:
  # The workflow here is to run unit test for every commit. But when the commit is on the master branch,
  # we want to run the unit test as usual and then upload the apk to play store.
  bux-android-ci-cd-process:
    jobs:
      - unit-test
      - deploy-release-build:
         requires:
          - unit-test
         filters:
          branches:
           only: master